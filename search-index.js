var searchIndex = {};
searchIndex["futures_borrow"] = {"doc":"Futures-aware borrow cell.","items":[[3,"Borrow","futures_borrow","A mutable memory location with future-aware dynamically checked borrow rules.",null,null],[3,"BorrowGuard","","Holds a borrowed value obtained from `Borrow`.",null,null],[3,"BorrowError","","Error produced by a failed `poll_borrow` call.",null,null],[3,"TryBorrowError","","Error produced by a failed `try_borrow` call.",null,null],[11,"fmt","","",0,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",1,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","Create a new `Borrow` containing `value`.",2,{"inputs":[{"name":"t"}],"output":{"name":"borrow"}}],[11,"is_ready","","Returns `true` if the value is not already borrowed.",2,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"poll_ready","","Returns `Ready` when the value is not already borrowed.",2,{"inputs":[{"name":"self"}],"output":{"name":"poll"}}],[11,"poll_borrow","","Attempt to borrow the value, returning `NotReady` if it cannot be borrowed.",2,{"inputs":[{"name":"self"}],"output":{"name":"poll"}}],[11,"try_borrow","","Attempt to borrow the value, returning `Err` if it cannot be borrowed.",2,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[11,"map","","Make a new `BorrowGuard` for a component of the borrowed data.",2,{"inputs":[{"name":"borrowguard"},{"name":"f"}],"output":{"name":"borrowguard"}}],[11,"try_map","","Make a new `BorrowGuard` for a component of the borrowed data.",2,{"inputs":[{"name":"borrowguard"},{"name":"f"}],"output":{"name":"result"}}],[11,"default","","",2,{"inputs":[],"output":{"name":"borrow"}}],[11,"fmt","","",2,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"deref","","",3,{"inputs":[{"name":"self"}],"output":{"name":"t"}}],[11,"deref_mut","","",3,{"inputs":[{"name":"self"}],"output":{"name":"t"}}],[11,"fmt","","",3,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"is_poisoned","","",1,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}]],"paths":[[3,"BorrowError"],[3,"TryBorrowError"],[3,"Borrow"],[3,"BorrowGuard"]]};
searchIndex["futures_test"] = {"doc":"","items":[[0,"harness","futures_test","",null,null],[3,"Harness","futures_test::harness","Wraps a future, providing an API to interact with it while off task.",null,null],[3,"TimeoutError","","Error produced by `TestHarness` operations with timeout.",null,null],[11,"fmt","","",0,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",1,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","Wraps `obj` in a test harness, enabling interacting with the future while not on a `Task`.",0,{"inputs":[{"name":"t"}],"output":{"name":"self"}}],[11,"with","","",0,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"r"}}],[11,"is_notified","","Returns `true` if the inner future has received a readiness notification since the last action has been performed.",0,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"get_ref","","Returns a reference to the inner future.",0,{"inputs":[{"name":"self"}],"output":{"name":"t"}}],[11,"get_mut","","Returns a mutable reference to the inner future.",0,{"inputs":[{"name":"self"}],"output":{"name":"t"}}],[11,"into_inner","","Consumes `self`, returning the inner future.",0,{"inputs":[{"name":"self"}],"output":{"name":"t"}}],[11,"poll_fn","","Wraps the `poll_fn` in a harness.",0,{"inputs":[{"name":"f"}],"output":{"name":"self"}}],[11,"poll","","Polls the inner future.",0,{"inputs":[{"name":"self"}],"output":{"name":"poll"}}],[11,"wait","","Waits for the internal future to complete, blocking this thread's execution until it does.",0,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[11,"wait_timeout","","Waits for the internal future to complete, blocking this thread's execution for at most `dur`.",0,{"inputs":[{"name":"self"},{"name":"duration"}],"output":{"name":"result"}}],[11,"poll_next","","Polls the inner future.",0,{"inputs":[{"name":"self"}],"output":{"name":"poll"}}],[11,"is_timeout","","",1,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"into_inner","","Consumes `self`, returning the inner error. Returns `None` if `self` represents a timeout.",1,{"inputs":[{"name":"self"}],"output":{"name":"option"}}]],"paths":[[3,"Harness"],[3,"TimeoutError"]]};
searchIndex["futures_watch"] = {"doc":"A multi-consumer, single producer cell that receives notifications when the inner value is changed.","items":[[3,"Watch","futures_watch","A future-aware cell that receives notifications when the inner value is changed.",null,null],[3,"Store","","Update the inner value of a `Watch` cell.",null,null],[3,"Ref","","Borrowed reference",null,null],[3,"WatchError","","Errors produced by `Watch`.",null,null],[3,"StoreError","","Errors produced by `Store`.",null,null],[11,"fmt","","",0,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",1,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",2,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",3,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",4,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","Create a new watch cell, returning the consumer / producer halves.",0,null],[11,"is_final","","Returns true if the current value represents the final value",0,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"borrow","","Returns a reference to the inner value",0,{"inputs":[{"name":"self"}],"output":{"name":"ref"}}],[11,"poll","","",0,{"inputs":[{"name":"self"}],"output":{"name":"poll"}}],[11,"clone","","",0,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[11,"drop","","",0,{"inputs":[{"name":"self"}],"output":null}],[11,"store","","Store a new value in the cell, notifying all watchers. The previous value is returned.",1,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"name":"result"}}],[11,"poll_cancel","","Returns `Ready` when all watchers have dropped.",1,{"inputs":[{"name":"self"}],"output":{"name":"poll"}}],[11,"start_send","","",1,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"name":"startsend"}}],[11,"poll_complete","","",1,{"inputs":[{"name":"self"}],"output":{"name":"poll"}}],[11,"drop","","",1,{"inputs":[{"name":"self"}],"output":null}],[11,"deref","","",2,{"inputs":[{"name":"self"}],"output":{"name":"t"}}]],"paths":[[3,"Watch"],[3,"Store"],[3,"Ref"],[3,"WatchError"],[3,"StoreError"]]};
initSearch(searchIndex);
